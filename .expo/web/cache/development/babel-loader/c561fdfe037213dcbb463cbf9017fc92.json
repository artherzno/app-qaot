{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(page, {\n            circle: circle,\n            text: text\n          });\n        },\n        style: {\n          textShadowColor: 'rgba(0, 0, 0, 0.5)',\n          textShadowOffset: {\n            width: 2,\n            height: 1\n          },\n          textShadowRadius: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.btnCircle, {\n          backgroundColor: checkColor(circle)\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, circle), React.createElement(Text, {\n        style: [styles.btnText, {\n          fontFamily: 'kanit-medium'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, text)));\n    }\n  }]);\n\n  return Button;\n}(Component);\nvar styles = StyleSheet.create({\n  btn: {\n    borderRadius: 100,\n    textAlign: 'center',\n    overflow: 'hidden',\n    marginBottom: 10,\n    minWidth: 280,\n    width: '100%'\n  },\n  btnCircle: {\n    borderRadius: 100,\n    width: 30,\n    maxWidth: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    margin: 4,\n    padding: 2,\n    fontSize: 30,\n    fontFamily: 'kanit-medium'\n  },\n  btnText: {\n    fontSize: 15,\n    padding: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    textAlign: 'left',\n    color: '#fff',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: {\n      width: 2,\n      height: 1\n    },\n    textShadowRadius: 1,\n    flex: 4,\n    textAlignVertical: 'auto',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/Button.js"],"names":["React","Component","Button","navigation","navigate","page","circle","text","textShadowColor","textShadowOffset","width","height","textShadowRadius","display","flexDirection","styles","btnCircle","backgroundColor","checkColor","btnText","fontFamily","StyleSheet","create","btn","borderRadius","textAlign","overflow","marginBottom","minWidth","maxWidth","alignItems","justifyContent","flex","margin","padding","fontSize","paddingLeft","paddingRight","color","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TouchableOpacity, StyleSheet} from 'react-native';\n\nexport class Button extends Component {\n    render() {\n        return (\n            <TouchableOpacity\n            onPress={() => navigation.navigate(page, {\n                circle,\n                text\n              })}\n            style={{\n                textShadowColor: 'rgba(0, 0, 0, 0.5)',\n                textShadowOffset: {width: 2, height: 1},\n                textShadowRadius: 1,\n            }}\n            >\n                \n                <View style={{display: 'flex', flexDirection: 'row'}}>\n                    <Text style={[styles.btnCircle, {backgroundColor: checkColor(circle)}]}>{circle}</Text>\n                    <Text style={[styles.btnText, {fontFamily:'kanit-medium'}]}>{text}</Text>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    btn: {\n        borderRadius:100,\n        textAlign: 'center',\n        overflow: 'hidden',\n        marginBottom: 10,\n        minWidth: 280,\n        width: '100%'\n    },\n    btnCircle: {\n        borderRadius: 100,\n        width: 30,\n        maxWidth: 50,\n        height: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        margin: 4,\n        padding: 2,\n        fontSize: 30,\n        fontFamily: 'kanit-medium',\n    },\n    btnText: {\n        // height: 50,\n        fontSize: 15,\n        padding: 5,\n        paddingLeft: 10,\n        paddingRight: 10,\n        textAlign: 'left',\n        color: '#fff',\n        textShadowColor: 'rgba(0, 0, 0, 0.5)',\n        textShadowOffset: {width: 2, height: 1},\n        textShadowRadius: 1,\n        flex: 4,\n        textAlignVertical: 'auto',\n        justifyContent: 'center'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}