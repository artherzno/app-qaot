{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useNavigation } from '@react-navigation/native';\nexport var Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          color = _this$props.color,\n          circle = _this$props.circle,\n          text = _this$props.text,\n          page = _this$props.page;\n\n      var checkColor = function checkColor(val) {\n        if (val === 'A') {\n          return '#18CB4B';\n        } else if (val === 'B') {\n          return '#7BDDFF';\n        } else if (val == 'C') {\n          return '#FF7DE1';\n        } else {\n          return '#FFFF24';\n        }\n      };\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(page, {\n            circle: circle,\n            text: text\n          });\n        },\n        style: {\n          textShadowColor: 'rgba(0, 0, 0, 0.5)',\n          textShadowOffset: {\n            width: 2,\n            height: 1\n          },\n          textShadowRadius: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(LinearGradient, {\n        colors: ['#4472C4', '#4FD1FF', '#4472C4'],\n        start: [0, 0],\n        end: [1, 1],\n        location: [0.25, 0.4, 1],\n        style: [styles.btn, styles.btnBlue],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: [styles.btnCircle, {\n          backgroundColor: checkColor(circle)\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, circle), React.createElement(Text, {\n        style: [styles.btnText, {\n          fontFamily: 'kanit-medium'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, text))));\n    }\n  }]);\n\n  return Button;\n}(Component);\nvar styles = StyleSheet.create({\n  btn: {\n    borderRadius: 100,\n    textAlign: 'center',\n    overflow: 'hidden',\n    marginBottom: 10,\n    minWidth: 280,\n    width: '100%'\n  },\n  btnBlue: {\n    backgroundColor: '#60C5EA'\n  },\n  btnCircle: {\n    borderRadius: 100,\n    width: 30,\n    maxWidth: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    margin: 4,\n    padding: 2,\n    fontSize: 30,\n    fontFamily: 'kanit-medium'\n  },\n  btnText: {\n    fontSize: 15,\n    padding: 5,\n    paddingLeft: 10,\n    paddingRight: 10,\n    textAlign: 'left',\n    color: '#fff',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: {\n      width: 2,\n      height: 1\n    },\n    textShadowRadius: 1,\n    flex: 4,\n    textAlignVertical: 'auto',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/Button.js"],"names":["React","Component","LinearGradient","useNavigation","Button","props","navigation","color","circle","text","page","checkColor","val","navigate","textShadowColor","textShadowOffset","width","height","textShadowRadius","styles","btn","btnBlue","display","flexDirection","btnCircle","backgroundColor","btnText","fontFamily","StyleSheet","create","borderRadius","textAlign","overflow","marginBottom","minWidth","maxWidth","alignItems","justifyContent","flex","margin","padding","fontSize","paddingLeft","paddingRight","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View, TouchableOpacity, StyleSheet} from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport { useNavigation } from '@react-navigation/native';\n\nexport class Button extends Component {\n    render() {\n        const { navigation, color, circle, text, page } = this.props;\n\n        const checkColor = (val) => {\n            if(val==='A') {\n                return '#18CB4B';\n            } else if(val==='B') {\n                return '#7BDDFF'\n            } else if(val=='C') {\n                return '#FF7DE1'\n            } else {\n                return '#FFFF24';\n            }\n        }\n\n        return (\n            <TouchableOpacity\n                onPress={() => navigation.navigate(page, {\n                    circle,\n                    text\n                  })}\n                style={{\n                    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n                    textShadowOffset: {width: 2, height: 1},\n                    textShadowRadius: 1,\n                }}\n                >\n                    <LinearGradient \n                        colors={['#4472C4', '#4FD1FF', '#4472C4']}\n                        start={[0, 0]}\n                        end={[1, 1]}\n                        location={[0.25, 0.4, 1]} \n                        style={[styles.btn, styles.btnBlue]}\n                    >\n                        <View style={{display: 'flex', flexDirection: 'row'}}>\n                            <Text style={[styles.btnCircle, {backgroundColor: checkColor(circle)}]}>{circle}</Text>\n                            <Text style={[styles.btnText, {fontFamily:'kanit-medium'}]}>{text}</Text>\n                        </View>\n                    </LinearGradient>\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    btn: {\n        borderRadius:100,\n        textAlign: 'center',\n        overflow: 'hidden',\n        marginBottom: 10,\n        minWidth: 280,\n        width: '100%'\n    },\n    btnBlue: {\n        backgroundColor: '#60C5EA'\n    },\n    btnCircle: {\n        borderRadius: 100,\n        width: 30,\n        maxWidth: 50,\n        height: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        margin: 4,\n        padding: 2,\n        fontSize: 30,\n        fontFamily: 'kanit-medium',\n    },\n    btnText: {\n        // height: 50,\n        fontSize: 15,\n        padding: 5,\n        paddingLeft: 10,\n        paddingRight: 10,\n        textAlign: 'left',\n        color: '#fff',\n        textShadowColor: 'rgba(0, 0, 0, 0.5)',\n        textShadowOffset: {width: 2, height: 1},\n        textShadowRadius: 1,\n        flex: 4,\n        textAlignVertical: 'auto',\n        justifyContent: 'center'\n    }\n});\n"]},"metadata":{},"sourceType":"module"}