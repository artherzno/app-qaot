{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nexport var Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          color = _this$props.color,\n          circle = _this$props.circle,\n          text = _this$props.text,\n          page = _this$props.page;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(page);\n        },\n        style: [styles.btn, styles.btnBlue],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.btnCircle, {\n          backgroundColor: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, circle), React.createElement(Text, {\n        style: [styles.btnText, {\n          fontFamily: 'kanit-medium'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, text));\n    }\n  }]);\n\n  return Button;\n}(Component);\nvar styles = StyleSheet.create({\n  btn: {\n    borderRadius: 100,\n    textAlign: 'center',\n    overflow: 'hidden',\n    padding: 20\n  },\n  btnBlue: {\n    backgroundColor: '#60C5EA'\n  },\n  btnCircle: {\n    borderRadius: 100\n  },\n  btnText: {\n    fontSize: 20,\n    color: '#fff',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: {\n      width: 2,\n      height: 1\n    },\n    textShadowRadius: 1\n  }\n});","map":{"version":3,"sources":["/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/Button.js"],"names":["React","Component","useNavigation","Button","props","navigation","color","circle","text","page","navigate","styles","btn","btnBlue","btnCircle","backgroundColor","btnText","fontFamily","StyleSheet","create","borderRadius","textAlign","overflow","padding","fontSize","textShadowColor","textShadowOffset","width","height","textShadowRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,WAAaC,MAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACGC,UADH,eACGA,UADH;AAAA,UACeC,KADf,eACeA,KADf;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAAA,UAC8BC,IAD9B,eAC8BA,IAD9B;AAAA,UACoCC,IADpC,eACoCA,IADpC;AAGL,aACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAMJ,UAAU,CAACK,QAAX,CAAoBD,IAApB,CAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAE,CAACE,MAAM,CAACC,GAAR,EAAaD,MAAM,CAACE,OAApB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACF,MAAM,CAACG,SAAR,EAAmB;AAACC,UAAAA,eAAe,EAAET;AAAlB,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4DC,MAA5D,CAHJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACI,MAAM,CAACK,OAAR,EAAiB;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6DT,IAA7D,CAJJ,CADJ;AAQH;AAZL;;AAAA;AAAA,EAA4BP,SAA5B;AAeA,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,GAAG,EAAE;AACDQ,IAAAA,YAAY,EAAC,GADZ;AAEDC,IAAAA,SAAS,EAAE,QAFV;AAGDC,IAAAA,QAAQ,EAAE,QAHT;AAIDC,IAAAA,OAAO,EAAE;AAJR,GADwB;AAO7BV,EAAAA,OAAO,EAAE;AACLE,IAAAA,eAAe,EAAE;AADZ,GAPoB;AAU7BD,EAAAA,SAAS,EAAE;AACPM,IAAAA,YAAY,EAAE;AADP,GAVkB;AAa7BJ,EAAAA,OAAO,EAAE;AACLQ,IAAAA,QAAQ,EAAE,EADL;AAELlB,IAAAA,KAAK,EAAE,MAFF;AAGLmB,IAAAA,eAAe,EAAE,oBAHZ;AAILC,IAAAA,gBAAgB,EAAE;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAJb;AAKLC,IAAAA,gBAAgB,EAAE;AALb;AAboB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View, TouchableOpacity, StyleSheet} from 'react-native'\n\nimport { useNavigation } from '@react-navigation/native';\n\nexport class Button extends Component {\n    render() {\n        const { navigation, color, circle, text, page } = this.props;\n\n        return (\n            <TouchableOpacity\n                onPress={() => navigation.navigate(page)}\n                style={[styles.btn, styles.btnBlue]}>\n                <Text style={[styles.btnCircle, {backgroundColor: color}]}>{circle}</Text>\n                <Text style={[styles.btnText, {fontFamily:'kanit-medium'}]}>{text}</Text>\n            </TouchableOpacity>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    btn: {\n        borderRadius:100,\n        textAlign: 'center',\n        overflow: 'hidden',\n        padding: 20\n    },\n    btnBlue: {\n        backgroundColor: '#60C5EA'\n    },\n    btnCircle: {\n        borderRadius: 100\n    },\n    btnText: {\n        fontSize: 20,\n        color: '#fff',\n        textShadowColor: 'rgba(0, 0, 0, 0.5)',\n        textShadowOffset: {width: 2, height: 1},\n        textShadowRadius: 1\n    }\n});\n"]},"metadata":{},"sourceType":"module"}