{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/ButtonGradient.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nexport var ButtonGradient = function (_Component) {\n  _inherits(ButtonGradient, _Component);\n\n  var _super = _createSuper(ButtonGradient);\n\n  function ButtonGradient() {\n    _classCallCheck(this, ButtonGradient);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ButtonGradient, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          text = _this$props.text;\n\n      var checkColor = function checkColor() {\n        if (color === 'grey') {\n          return {\n            bgColor: '#E2E2E2',\n            textColor: '#888888',\n            shadow: 0\n          };\n        } else {\n          return {\n            bgColor: '#4472C4',\n            textColor: '#ffffff',\n            shadow: 1\n          };\n        }\n      };\n\n      return React.createElement(LinearGradient, {\n        colors: ['#4FD1FF', '#4472C4'],\n        start: [0, 0],\n        end: [0, 1],\n        location: [0.25, 0.4, 1],\n        style: [styles.btn, styles.btnBlue],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [{\n          display: 'flex',\n          flexDirection: 'row'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 22\n        }\n      }, React.createElement(Text, {\n        style: [styles.btnText, {\n          fontFamily: 'kanit-medium'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, text)));\n    }\n  }]);\n\n  return ButtonGradient;\n}(Component);\nvar styles = StyleSheet.create({\n  btn: {\n    borderRadius: 100,\n    textAlign: 'center',\n    overflow: 'hidden',\n    marginBottom: 10,\n    minWidth: 280,\n    width: '100%'\n  },\n  btnText: {\n    fontSize: 20,\n    padding: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n    textAlign: 'center',\n    color: '#fff',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 1,\n    flex: 4,\n    textAlignVertical: 'auto',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/zkyzno/Desktop/App/ReactNative/app-qaot/component/ButtonGradient.js"],"names":["React","Component","LinearGradient","ButtonGradient","props","color","text","checkColor","bgColor","textColor","shadow","styles","btn","btnBlue","display","flexDirection","btnText","fontFamily","StyleSheet","create","borderRadius","textAlign","overflow","marginBottom","minWidth","width","fontSize","padding","paddingLeft","paddingRight","textShadowColor","textShadowOffset","height","textShadowRadius","flex","textAlignVertical","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,WAAaC,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,IADV,eACUA,IADV;;AAGL,UAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,YAAGF,KAAK,KAAG,MAAX,EAAmB;AACf,iBAAO;AAAEG,YAAAA,OAAO,EAAE,SAAX;AAAsBC,YAAAA,SAAS,EAAE,SAAjC;AAA4CC,YAAAA,MAAM,EAAE;AAApD,WAAP;AACH,SAFD,MAEO;AACH,iBAAO;AAAEF,YAAAA,OAAO,EAAE,SAAX;AAAsBC,YAAAA,SAAS,EAAE,SAAjC;AAA4CC,YAAAA,MAAM,EAAE;AAApD,WAAP;AACH;AACJ,OAND;;AAQA,aACI,oBAAC,cAAD;AACY,QAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CADpB;AAEY,QAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFnB;AAGY,QAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHjB;AAIY,QAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,CAJtB;AAKY,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,GAAR,EAAaD,MAAM,CAACE,OAApB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMS,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,aAAa,EAAE;AAAjC,SAAD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,OAAR,EAAiB;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6DX,IAA7D,CADC,CANT,CADJ;AAYH;AAxBL;;AAAA;AAAA,EAAoCL,SAApC;AA2BA,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,GAAG,EAAE;AACDQ,IAAAA,YAAY,EAAC,GADZ;AAEDC,IAAAA,SAAS,EAAE,QAFV;AAGDC,IAAAA,QAAQ,EAAE,QAHT;AAIDC,IAAAA,YAAY,EAAE,EAJb;AAKDC,IAAAA,QAAQ,EAAE,GALT;AAMDC,IAAAA,KAAK,EAAE;AANN,GADwB;AAS7BT,EAAAA,OAAO,EAAE;AAELU,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,WAAW,EAAE,EAJR;AAKLC,IAAAA,YAAY,EAAE,EALT;AAMLR,IAAAA,SAAS,EAAE,QANN;AAOLhB,IAAAA,KAAK,EAAE,MAPF;AAQLyB,IAAAA,eAAe,EAAE,oBARZ;AASLC,IAAAA,gBAAgB,EAAE;AAACN,MAAAA,KAAK,EAAE,CAAR;AAAWO,MAAAA,MAAM,EAAE;AAAnB,KATb;AAULC,IAAAA,gBAAgB,EAAE,CAVb;AAWLC,IAAAA,IAAI,EAAE,CAXD;AAYLC,IAAAA,iBAAiB,EAAE,MAZd;AAaLC,IAAAA,cAAc,EAAE;AAbX;AAToB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TouchableOpacity, StyleSheet} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nexport class ButtonGradient extends Component {\n    render() {\n        const { color, text } = this.props;\n\n        const checkColor = () => {\n            if(color==='grey') {\n                return { bgColor: '#E2E2E2', textColor: '#888888', shadow: 0 };\n            } else {\n                return { bgColor: '#4472C4', textColor: '#ffffff', shadow: 1 };\n            }\n        }\n\n        return (\n            <LinearGradient \n                        colors={['#4FD1FF', '#4472C4']}\n                        start={[0, 0]}\n                        end={[0, 1]}\n                        location={[0.25, 0.4, 1]} \n                        style={[styles.btn, styles.btnBlue]}\n                    ><View style={[{display: 'flex', flexDirection: 'row'}]}>\n                    <Text style={[styles.btnText, {fontFamily:'kanit-medium'}]}>{text}</Text>\n                </View></LinearGradient>\n        \n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    btn: {\n        borderRadius:100,\n        textAlign: 'center',\n        overflow: 'hidden',\n        marginBottom: 10,\n        minWidth: 280,\n        width: '100%'\n    },\n    btnText: {\n        // height: 50,\n        fontSize: 20,\n        padding: 15,\n        paddingLeft: 10,\n        paddingRight: 10,\n        textAlign: 'center',\n        color: '#fff',\n        textShadowColor: 'rgba(0, 0, 0, 0.5)',\n        textShadowOffset: {width: 1, height: 1},\n        textShadowRadius: 1,\n        flex: 4,\n        textAlignVertical: 'auto',\n        justifyContent: 'center'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}